{"version":3,"sources":["scripts/app-dfa81d4793.js"],"names":["angular","module","service","localStorageService","todoListTodos","todoListName","_","filter","todoLists","name","addTodoList","newTodoListName","foundExistingName","allLists","lastElement","last","isUndefined","push","id","todos","set","find","addTodoToList","todo","newListTodos","todoExists","value","isDefined","length","todoList","removeTodoFromList","storedListTodos","remove","t","list","changeTodoStatus","todoId","listTodos","done","updateTodoValue","newTodoValue","updateTodoList","todoListId","removeTodoList","l","get","isString","fromJson","$inject","factory","directive","templateUrl","restrict","controller","$scope","todoAppStorage","prompt","title","message","input","label","then","todosInStore","scope","data","hideEditRemoveButtons","editMode","hoverIn","hoverOut","todoValue","todoToBeSaved","editTodoList","updateTodoListName","editModeOFF","removeTodo","editTodo","updateTodo","MainController","activate","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","controllerAs","otherwise","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,WAAY,YAAa,qBAAsB,eAAgB,gBAI1E,WACG,YAOA,SAASC,GAAQC,GAgBb,QAASC,GAAcC,GACnB,MAAOC,GAAEC,OAAOC,GAAYC,KAAQJ,IAIxC,QAASK,GAAYC,GACjB,GAEAC,GAFIC,EAAWL,EACfM,EAAcR,EAAES,KAAKF,EAGjBb,SAAQgB,YAAYF,IACpBD,EAASI,MACLC,GAAI,EACJT,KAAME,EACNQ,WAGJhB,EAAoBiB,IAAI,UAAWP,KAEnCD,EAAoBN,EAAEe,KAAKR,GACvBJ,KAAQE,IAGRX,QAAQgB,YAAYJ,KACpBC,EAASI,MACLC,GAAIJ,EAAYI,GAAK,EACrBT,KAAME,EACNQ,WAGJhB,EAAoBiB,IAAI,UAAWP,KAK/C,QAASS,GAAcjB,EAAckB,GACjC,GAAIC,GAAepB,EAAcC,GAAc,GAAGc,MAC9CM,EAAanB,EAAEe,KAAKG,GAAeE,MAASH,EAAKG,OAErD,KAAI1B,QAAQ2B,UAAUF,GAAtB,CAI4B,IAAxBD,EAAaI,OACbL,EAAKL,GAAK,EAEVK,EAAKL,GAAKZ,EAAES,KAAKS,GAAcN,GAAK,EAGxCM,EAAaP,KAAKM,EAElB,KAAK,GAAIM,KAAYrB,GACbqB,EAASpB,OAASJ,IAClBwB,EAASV,MAAQK,EAIzBrB,GAAoBiB,IAAI,UAAWZ,IAGvC,QAASsB,GAAmBzB,EAAckB,GACtC,GAAIQ,GAAkB3B,EAAcC,GAAc,GAAGc,KAErDb,GAAE0B,OAAOD,EAAiB,SAASE,GAC/B,MAAOA,GAAEP,QAAUH,EAAKG,OAG5B,IAAIb,GAAWL,CAEf,KAAI,GAAI0B,KAAQrB,GACRqB,EAAKzB,OAASJ,IACd6B,EAAKf,MAAQY,EAIrB5B,GAAoBiB,IAAI,UAAWP,GAGvC,QAASsB,GAAiB9B,EAAc+B,GACpC,GAAIC,GAAYjC,EAAcC,GAC1BQ,EAAWL,CAEf,KAAI,GAAIe,KAAQc,GACRd,EAAKL,KAAOkB,IACZb,EAAKe,MAAQf,EAAKe,KAI1B,KAAI,GAAIJ,KAAQrB,GACRqB,EAAKzB,OAASJ,IACd6B,EAAKf,MAAQkB,EAIrBlC,GAAoBiB,IAAI,UAAWP,GAGvC,QAAS0B,GAAgBlC,EAAc+B,EAAQI,GAC3C,GAAIH,GAAYjC,EAAcC,GAC1BQ,EAAWL,CAEf,KAAI,GAAIe,KAAQc,GACRd,EAAKL,KAAOkB,IACZb,EAAKG,MAAQc,EAIrB,KAAI,GAAIN,KAAQrB,GACRqB,EAAKzB,OAASJ,IACd6B,EAAKf,MAAQkB,EAIrBlC,GAAoBiB,IAAI,UAAWP,GAGvC,QAAS4B,GAAeC,EAAY/B,GAChC,GAAIE,GAAWL,CAEf,KAAI,GAAI0B,KAAQrB,GACRqB,EAAKhB,KAAOwB,IACZR,EAAKzB,KAAOE,EAIpBR,GAAoBiB,IAAI,UAAWP,GAIvC,QAAS8B,GAAeD,GACpB,GAAI7B,GAAWL,CAEfF,GAAE0B,OAAOnB,EAAU,SAAS+B,GACxB,MAAOA,GAAE1B,KAAOwB,IAGpBvC,EAAoBiB,IAAI,UAAWP,GAvJvC,GAAIL,GAAYL,EAAoB0C,IAAI,cAGxC,OAFArC,GAAYF,EAAEwC,SAAStC,GAAaR,QAAQ+C,SAASvC,GAAaA,GAG9DJ,cAAeA,EACfM,YAAaA,EACbY,cAAeA,EACfd,UAAWA,EACXsB,mBAAoBA,EACpBK,iBAAkBA,EAClBI,gBAAiBA,EACjBE,eAAgBA,EAChBE,eAAgBA,GAlBxBzC,EAAQ8C,SAAW,uBAAnBhD,QACKC,OAAO,WACPgD,QAAQ,iBAAkB/C,MA+JlC,WACG,YAMA,SAASM,KACL,GAAI0C,IACAC,YAAa,0CACbC,SAAU,IACVC,WAAYA,EAEhB,OAAOH,GAIX,QAASG,GAAWC,EAAQC,EAAgBC,GACxCF,EAAO3C,gBAAkB,GACzB2C,EAAO9C,UAAY+C,EAAe/C,UAElC8C,EAAO5C,YAAc,WACjB8C,GACIC,MAAO,2BACPC,QAAS,kCACTC,OAAO,EACPC,MAAO,iBACPlC,MAAO,KACRmC,KAAK,SAASlD,GACb,GAAwB,KAApBA,EAAwB,CACxB,GAAImD,GAAeP,EAAenD,cAAcO,EAE3B,QAAjBmD,IACAA,MAGJP,EAAe7C,YAAYC,EAAiBmD,OAhC5DT,EAAWL,SAAW,SAAU,iBAAkB,UADlDhD,QACKC,OAAO,WACPiD,UAAU,YAAa1C,MAqC/B,WACG,YAMA,SAASqB,KACL,GAAIqB,IACAC,YAAa,wCACbC,SAAU,IACVC,WAAYA,EACZU,OACIC,KAAM,KAGd,OAAOd,GAIX,QAASG,GAAWC,EAAQC,GACxBD,EAAOW,uBAAwB,EAC/BX,EAAOY,UAAW,EAElBZ,EAAOa,QAAU,WACbb,EAAOW,uBAAwB,GAGnCX,EAAOc,SAAW,WACdd,EAAOW,uBAAwB,GAGlCX,EAAOhC,cAAgB,WACpB,GAAI+C,GAAYf,EAAO/B,KACnB+C,IAEAtE,SAAQgB,YAAYqD,IAAmC,IAArBA,EAAUzC,SAIhD0C,EAAc5C,MAAQ2C,EACtBC,EAAchC,MAAO,EAErBiB,EAAejC,cAAcgC,EAAOU,KAAKvD,KAAM6D,GAE/ChB,EAAO/B,KAAO,KAGlB+B,EAAOiB,aAAe,WAClBjB,EAAOY,UAAW,GAGtBZ,EAAOkB,mBAAqB,WACxBjB,EAAed,eAAea,EAAOU,KAAK9C,GAAIoC,EAAOU,KAAKvD,MAE1D6C,EAAOY,UAAW,GAGtBZ,EAAOX,eAAiB,WACnBY,EAAeZ,eAAeW,EAAOU,KAAK9C,KAtDnDmC,EAAWL,SAAW,SAAU,kBAFhChD,QACKC,OAAO,WACPiD,UAAU,WAAYrB,MA0D/B,WACI,YAOA,SAASN,KACL,GAAI2B,IACAC,YAAa,gCACbC,SAAU,IACVC,WAAYA,EACZU,OACIC,KAAM,IACN3D,aAAc,KAItB,OAAO6C,GAKX,QAASG,GAAWC,EAAQnD,EAAqBoD,GAC7CD,EAAOW,uBAAwB,EAC/BX,EAAOY,UAAW,EAElBZ,EAAOa,QAAU,WACbb,EAAOW,uBAAwB,EAC/BX,EAAOmB,aAAc,GAGzBnB,EAAOc,SAAW,WACdd,EAAOW,uBAAwB,GAGnCX,EAAOoB,WAAa,WAChBnB,EAAezB,mBAAmBwB,EAAOjD,aAAciD,EAAOU,OAGlEV,EAAOqB,SAAW,WACdrB,EAAOW,uBAAwB,EAC/BX,EAAOY,UAAW,GAItBZ,EAAOnB,iBAAmB,WACtBoB,EAAepB,iBAAiBmB,EAAOjD,aAAciD,EAAOU,KAAK9C,KAGrEoC,EAAOsB,WAAa,WAChBrB,EAAehB,gBAAgBe,EAAOjD,aAAciD,EAAOU,KAAK9C,GAAIoC,EAAOU,KAAKtC,OAEhF4B,EAAOY,UAAW,GAhD1Bb,EAAWL,SAAW,SAAU,sBAAuB,kBAHvDhD,QACKC,OAAO,WACPiD,UAAU,OAAQ3B,MAqD3B,WACE,YAOA,SAASsD,KAOP,QAASC,MAFTA,IAVF9E,QACGC,OAAO,WACPoD,WAAW,iBAAkBwB,MAiBlC,WACE,YAOA,SAASE,GAASC,GAChBA,EAAKC,MAAM,gBAFbF,EAAS/B,SAAW,QAJpBhD,QACGC,OAAO,WACPiF,IAAIH,MAST,WACE,YAOA,SAASI,GAAaC,EAAgBC,GACpCD,EACGE,MAAM,QACLC,IAAK,IACLpC,YAAa,qBACbE,WAAY,iBACZmC,aAAc,SAGlBH,EAAmBI,UAAU,KAT/BN,EAAanC,SAAW,iBAAkB,sBAL1ChD,QACGC,OAAO,WACPyF,OAAOP,MAiBZ,WACE,YAOA,SAASO,GAAOC,GAEdA,EAAaC,cAAa,GAD5BF,EAAO1C,SAAW,gBANlBhD,QACGC,OAAO,WACPyF,OAAOA,MAWZ1F,QAAQC,OAAO,WAAWiF,KAAK,iBAAkB,SAASW,GAAiBA,EAAeC,IAAI,qBAAqB,0DACnHD,EAAeC,IAAI,gCAAgC,ytBACnDD,EAAeC,IAAI,wCAAwC,igDAC3DD,EAAeC,IAAI,0CAA0C","file":"scripts/app-dfa81d4793.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('todoApp', ['ui.router', 'LocalStorageModule', 'ui.bootstrap', 'cgPrompt']);\n\n})();\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('todoApp')\r\n        .factory('todoAppStorage', service);\r\n\r\n    /** @ngInject */\r\n    function service(localStorageService) {\r\n        var todoLists = localStorageService.get('todoApp') || [];\r\n        todoLists = _.isString(todoLists) ? angular.fromJson(todoLists) : todoLists;\r\n\r\n        return {\r\n            todoListTodos: todoListTodos,\r\n            addTodoList: addTodoList,\r\n            addTodoToList: addTodoToList,\r\n            todoLists: todoLists,\r\n            removeTodoFromList: removeTodoFromList,\r\n            changeTodoStatus: changeTodoStatus,\r\n            updateTodoValue: updateTodoValue,\r\n            updateTodoList: updateTodoList,\r\n            removeTodoList: removeTodoList\r\n        };\r\n\r\n        function todoListTodos(todoListName) {\r\n            return _.filter(todoLists, {'name': todoListName});\r\n\r\n        }\r\n\r\n        function addTodoList(newTodoListName) {\r\n            var allLists = todoLists,\r\n            lastElement = _.last(allLists),\r\n            foundExistingName;\r\n\r\n            if (angular.isUndefined(lastElement)) {\r\n                allLists.push({\r\n                    id: 1,\r\n                    name: newTodoListName,\r\n                    todos: []\r\n                });\r\n\r\n                localStorageService.set('todoApp', allLists);\r\n            } else {\r\n                foundExistingName = _.find(allLists, {\r\n                    'name': newTodoListName\r\n                });\r\n\r\n                if (angular.isUndefined(foundExistingName)) {\r\n                    allLists.push({\r\n                        id: lastElement.id + 1,\r\n                        name: newTodoListName,\r\n                        todos: []\r\n                    });\r\n\r\n                    localStorageService.set('todoApp', allLists);\r\n                }\r\n            }\r\n        }\r\n\r\n        function addTodoToList(todoListName, todo) {\r\n            var newListTodos = todoListTodos(todoListName)[0].todos;\r\n            var todoExists = _.find(newListTodos, {'value': todo.value});\r\n\r\n            if (angular.isDefined(todoExists)) {\r\n                return;\r\n            }\r\n\r\n            if (newListTodos.length === 0) {\r\n                todo.id = 1;\r\n            } else {\r\n                todo.id = _.last(newListTodos).id + 1;\r\n            }\r\n\r\n            newListTodos.push(todo);\r\n\r\n            for (var todoList in todoLists) {\r\n                if (todoList.name === todoListName) {\r\n                    todoList.todos = newListTodos;\r\n                }\r\n            }\r\n\r\n            localStorageService.set('todoApp', todoLists);\r\n        }\r\n\r\n        function removeTodoFromList(todoListName, todo) {\r\n            var storedListTodos = todoListTodos(todoListName)[0].todos;\r\n\r\n            _.remove(storedListTodos, function(t) {\r\n                return t.value === todo.value;\r\n            });\r\n\r\n            var allLists = todoLists;\r\n\r\n            for(var list in allLists) {\r\n                if (list.name === todoListName) {\r\n                    list.todos = storedListTodos;\r\n                }\r\n            }\r\n\r\n            localStorageService.set('todoApp', allLists);\r\n        }\r\n\r\n        function changeTodoStatus(todoListName, todoId) {\r\n            var listTodos = todoListTodos(todoListName),\r\n                allLists = todoLists;\r\n\r\n            for(var todo in listTodos) {\r\n                if (todo.id === todoId) {\r\n                    todo.done = !todo.done;\r\n                }\r\n            }\r\n\r\n            for(var list in allLists) {\r\n                if (list.name === todoListName) {\r\n                    list.todos = listTodos;\r\n                }\r\n            }\r\n\r\n            localStorageService.set('todoApp', allLists);\r\n        }\r\n\r\n        function updateTodoValue(todoListName, todoId, newTodoValue) {\r\n            var listTodos = todoListTodos(todoListName),\r\n                allLists = todoLists;\r\n\r\n            for(var todo in listTodos) {\r\n                if (todo.id === todoId) {\r\n                    todo.value = newTodoValue;\r\n                }\r\n            }\r\n\r\n            for(var list in allLists) {\r\n                if (list.name === todoListName) {\r\n                    list.todos = listTodos;\r\n                }\r\n            }\r\n\r\n            localStorageService.set('todoApp', allLists);\r\n        }\r\n\r\n        function updateTodoList(todoListId, newTodoListName) {\r\n            var allLists = todoLists;\r\n\r\n            for(var list in allLists) {\r\n                if (list.id === todoListId) {\r\n                    list.name = newTodoListName;\r\n                }\r\n            }\r\n\r\n            localStorageService.set('todoApp', allLists);\r\n\r\n        }\r\n\r\n        function removeTodoList(todoListId) {\r\n            var allLists = todoLists;\r\n\r\n            _.remove(allLists, function(l) {\r\n                return l.id === todoListId;\r\n            });\r\n\r\n            localStorageService.set('todoApp', allLists);\r\n        }\r\n    }\r\n}());\n(function() {\n    'use strict';\n\n    angular\n        .module('todoApp')\n        .directive('todoLists', todoLists);\n\n    function todoLists() {\n        var directive = {\n            templateUrl: 'app/components/todoLists/todoLists.html',\n            restrict: 'E',\n            controller: controller\n        };\n        return directive;\n    }\n\n    /** @ngInject */\n    function controller($scope, todoAppStorage, prompt) {\n        $scope.newTodoListName = '';\n        $scope.todoLists = todoAppStorage.todoLists;\n\n        $scope.addTodoList = function() {\n            prompt({\n                title: 'Give me a todo list name',\n                message: 'What would you like to name it?',\n                input: true,\n                label: 'Todo List Name',\n                value: ''\n            }).then(function(newTodoListName) {\n                if (newTodoListName !== '') {\n                    var todosInStore = todoAppStorage.todoListTodos(newTodoListName);\n\n                    if (todosInStore === null) {\n                        todosInStore = [];\n                    }\n\n                    todoAppStorage.addTodoList(newTodoListName, todosInStore);\n                }\n            });\n        };\n    }\n}());\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('todoApp')\r\n        .directive('todoList', todoList);\r\n\r\n    function todoList() {\r\n        var directive = {\r\n            templateUrl: 'app/components/todoList/todoList.html',\r\n            restrict: 'E',\r\n            controller: controller,\r\n            scope: {\r\n                data: '='\r\n            }\r\n        };\r\n        return directive;\r\n    }\r\n\r\n    /** @ngInject */\r\n    function controller($scope, todoAppStorage) {\r\n        $scope.hideEditRemoveButtons = true;\r\n        $scope.editMode = false;\r\n\r\n        $scope.hoverIn = function() {\r\n            $scope.hideEditRemoveButtons = false;\r\n        };\r\n\r\n        $scope.hoverOut = function() {\r\n            $scope.hideEditRemoveButtons = true;\r\n        };\r\n\r\n         $scope.addTodoToList = function() {\r\n            var todoValue = $scope.todo,\r\n                todoToBeSaved = {};\r\n\r\n            if (angular.isUndefined(todoValue) || todoValue.length === 0) {\r\n                return;\r\n            }\r\n\r\n            todoToBeSaved.value = todoValue;\r\n            todoToBeSaved.done = false;\r\n\r\n            todoAppStorage.addTodoToList($scope.data.name, todoToBeSaved);\r\n\r\n            $scope.todo = '';\r\n        };\r\n\r\n        $scope.editTodoList = function() {\r\n            $scope.editMode = true;\r\n        };\r\n\r\n        $scope.updateTodoListName = function() {\r\n            todoAppStorage.updateTodoList($scope.data.id, $scope.data.name);\r\n\r\n            $scope.editMode = false;\r\n        };\r\n\r\n        $scope.removeTodoList = function() {\r\n             todoAppStorage.removeTodoList($scope.data.id);\r\n        };\r\n    }\r\n}());\n(function() {\n    'use strict';\n\n    angular\n        .module('todoApp')\n        .directive('todo', todo);\n\n\n    function todo() {\n        var directive = {\n            templateUrl: 'app/components/todo/todo.html',\n            restrict: 'E',\n            controller: controller,\n            scope: {\n                data: '=',\n                todoListName: '='\n            }\n        };\n\n        return directive;\n    }\n\n\n    /** @ngInject */\n    function controller($scope, localStorageService, todoAppStorage) {\n        $scope.hideEditRemoveButtons = true;\n        $scope.editMode = false;\n\n        $scope.hoverIn = function() {\n            $scope.hideEditRemoveButtons = false;\n            $scope.editModeOFF = true;\n        };\n\n        $scope.hoverOut = function() {\n            $scope.hideEditRemoveButtons = true;\n        };\n\n        $scope.removeTodo = function() {\n            todoAppStorage.removeTodoFromList($scope.todoListName, $scope.data);\n        };\n\n        $scope.editTodo = function() {\n            $scope.hideEditRemoveButtons = true;\n            $scope.editMode = true;\n           \n        };\n\n        $scope.changeTodoStatus = function() {\n            todoAppStorage.changeTodoStatus($scope.todoListName, $scope.data.id);\n        };\n\n        $scope.updateTodo = function() {\n            todoAppStorage.updateTodoValue($scope.todoListName, $scope.data.id, $scope.data.value);\n\n            $scope.editMode = false;\n        };\n    }\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('todoApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController() {\n \n\n  \n\n    activate();\n\n    function activate() {\n    \n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todoApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todoApp')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todoApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n  }\n  \n})();\n\n\nangular.module(\"todoApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\"><todo-lists></todo-lists></div>\");\n$templateCache.put(\"app/components/todo/todo.html\",\"<p class=\\\"input-group\\\" ng-mouseover=\\\"hoverIn()\\\" ng-mouseleave=\\\"hoverOut()\\\"><span class=\\\"input-group-addon\\\"><input type=\\\"checkbox\\\" ng-model=\\\"data.done\\\" ng-click=\\\"changeTodoStatus()\\\"></span> <input type=\\\"text\\\" ng-model=\\\"data.value\\\" class=\\\"form-control\\\" ng-class=\\\"{\\'strike\\': data.done, \\'input-cursor\\' : !editMode}\\\" ng-readonly=\\\"!editMode\\\"> <span class=\\\"input-group-addon glyphicon glyphicon-pencil\\\" ng-if=\\\"!hideEditRemoveButtons && !editMode\\\" ng-click=\\\"editTodo()\\\"></span> <span class=\\\"input-group-addon glyphicon glyphicon-remove\\\" ng-if=\\\"!hideEditRemoveButtons && !editMode\\\" ng-click=\\\"removeTodo()\\\"></span> <span class=\\\"input-group-addon glyphicon glyphicon-floppy-save\\\" ng-if=\\\"editMode\\\" ng-click=\\\"updateTodo()\\\"></span></p>\");\n$templateCache.put(\"app/components/todoList/todoList.html\",\"<div class=\\\"jumbotron\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading-colored\\\"><div class=\\\"panel-heading\\\" ng-mouseover=\\\"hoverIn()\\\" ng-mouseleave=\\\"hoverOut()\\\" ng-class=\\\"{\\'input-cursor\\' : !editMode}\\\"><span class=\\\"glyphicon glyphicon-calendar\\\"></span> <span class=\\\"panel-heading-value\\\" ng-if=\\\"!editMode\\\">{{data.name}}</span> <input type=\\\"text\\\" ng-if=\\\"editMode\\\" ng-model=\\\"data.name\\\"> <span class=\\\"pull-right glyphicon glyphicon-remove\\\" ng-if=\\\"!hideEditRemoveButtons && !editMode\\\" ng-click=\\\"removeTodoList()\\\"></span> <span class=\\\"pull-right glyphicon glyphicon-pencil\\\" ng-if=\\\"!hideEditRemoveButtons && !editMode\\\" ng-click=\\\"editTodoList()\\\"></span> <span class=\\\"pull-right glyphicon glyphicon-floppy-save\\\" ng-if=\\\"editMode\\\" ng-click=\\\"updateTodoListName()\\\"></span></div></div></div><div class=\\\"panel-body\\\"><div class=\\\"text-center error-message\\\" ng-show=\\\"newTodoListForm.$dirty && newTodoListForm.todoValue.$error.minlength\\\">Minimum length required is 3</div><form role=\\\"form\\\" ng-submit=\\\"addTodoToList()\\\" name=\\\"newTodoListForm\\\"><p class=\\\"input-group\\\"><span class=\\\"input-group-addon glyphicon glyphicon-plus greenPlus\\\" ng-click=\\\"addTodoToList()\\\"></span> <input type=\\\"text\\\" ng-model=\\\"todo\\\" placeholder=\\\"Start typing here to create a task...\\\" class=\\\"form-control\\\" name=\\\"todoValue\\\" ng-minlength=\\\"3\\\" required=\\\"\\\"> <span class=\\\"input-group-btn\\\"><input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Add Task\\\"></span></p></form><todo data=\\\"todo\\\" todo-list-name=\\\"data.name\\\" ng-repeat=\\\"todo in data.todos track by $index\\\"></todo></div></div>\");\n$templateCache.put(\"app/components/todoLists/todoLists.html\",\"<h1 class=\\\"text-center\\\">SIMPLE TODO LISTS</h1><br><div ng-repeat=\\\"list in todoLists track by $index\\\"><todo-list data=\\\"list\\\"></todo-list></div><div class=\\\"text-center\\\"><button class=\\\"btn btn-primary btn-lg\\\" type=\\\"submit\\\" ng-click=\\\"addTodoList()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add TODO List</button></div>\");}]);"],"sourceRoot":"/source/"}